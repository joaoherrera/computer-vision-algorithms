// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.155.1/containers/docker-existing-dockerfile
{
	"name": "Computer Vision in CUDA",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	// "dockerFile": "../Dockerfile",
	"image": "computer-vision-in-cuda",

	"runArgs": [
		"--gpus", "all",
		"--env-file", "${localWorkspaceFolder}/.devcontainer/devcontainer.env",
		"--net", "host",
		"-e", "DISPLAY=${env:DISPLAY}",
		"-v", "/tmp/.X11-unix:/tmp/.X11-unix"
	],

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"C_Cpp.default.cppStandard": "c++11",
		"C_Cpp.default.compilerPath": "${CPP_COMPILER_PATH}",
		"C_Cpp.default.includePath": [
			"/usr/local/include/opencv4",
			"${workspaceFolder}/**"
		]
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.cpptools",
		"nvidia.nsight-vscode-edition",
		"mikestead.dotenv"
	]

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
